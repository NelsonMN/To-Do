(()=>{"use strict";var t={138:(t,e,n)=>{n.d(e,{IK:()=>s,iQ:()=>o,m8:()=>d});const o=(t,e,n,o,s,d)=>({getTitle:()=>t,setTitle:e=>t=e,getDescription:()=>e,setDescription:t=>e=t,getDate:()=>n,setDate:t=>n=t,getPriority:()=>o,setPriority:t=>o=t,getStatus:()=>s,setStatus:t=>s=t,getId:()=>d,setId:t=>d=t}),s=(t,e)=>{let n=[];return{getTasks:()=>n,getProjectTitle:()=>t,getProjectId:()=>e,setProjectTitle:e=>t=e,setProjectId:t=>e=t,getTask:t=>n.find((e=>e.getId()===t)),addTask:t=>{n.push(t)},removeTask:t=>{n=n.filter((e=>e.getId()!==t))}}},d=()=>{let t=[];return{getProject:e=>t.find((t=>t.getProjectId()===e)),getProjects:()=>t,addProject:e=>{t.push(e)},removeProject:e=>{t=t.filter((t=>t.getProjectId()!==e))}}}},982:(t,e,n)=>{n.d(e,{B:()=>c,z:()=>a});const o=document.querySelectorAll("[data-modal-target]"),s=document.querySelectorAll("[data-close-button]"),d=document.getElementById("overlay");function c(t){null!=t&&(t.classList.add("active"),d.classList.add("active"))}function a(t){null!=t&&(t.classList.remove("active"),d.classList.remove("active"))}o.forEach((t=>{t.addEventListener("click",(()=>{c(document.querySelector(t.dataset.modalTarget))}))})),s.forEach((t=>{t.addEventListener("click",(()=>{a(t.closest(".form"))}))}))},803:(t,e,n)=>{var o=n(138),s=n(982);const d=(0,o.m8)(),c=(0,o.IK)("Default Project");d.addProject(c);const a=document.getElementById("due-date"),r=(new Date).toISOString().slice(0,10);a.value=r;const l=document.querySelector(".add-project"),i=document.getElementById("add-project"),u=document.querySelector(".set-new-project-btn"),m=document.querySelector(".cancel-new-project-btn"),g=document.getElementById("project-title-input");l.addEventListener("click",(()=>{i.classList.toggle("hidden"),l.classList.toggle("hidden")})),u.addEventListener("click",(()=>{const t=function(){const t=g.value,e=self.crypto.randomUUID();return(0,o.IK)(t,e)}();d.addProject(t),i.classList.toggle("hidden"),l.classList.toggle("hidden"),g.value=""})),m.addEventListener("click",(()=>{i.classList.toggle("hidden"),l.classList.toggle("hidden"),g.value=""}));const p=document.querySelector(".projects"),y=document.querySelectorAll(".project"),v="\n    transform: scale(1.01);\n    transition: 0.2s;\n    box-shadow: 5px 5px 5px #bcbcbc;\n    ";let E;p.addEventListener("click",(function(t){y.forEach((t=>{t.classList.contains("high-light")&&t.removeAttribute("style")})),t.target.matches("div")&&t.target.classList.contains("project")?t.target.style.cssText=v:t.target.matches("div")&&t.target.classList.contains("project-title-div")&&t.target.classList.contains("high-light")?t.target.parentNode.style.cssText=v:t.target.matches("span")&&t.target.classList.contains("project-title")&&t.target.classList.contains("high-light")&&(t.target.parentNode.parentNode.style.cssText=v)})),document.querySelector(".tasks").addEventListener("click",(t=>{if(t.target.matches("span")&&"edit"==t.target.textContent){const e=document.querySelector("#edit-form");(0,s.B)(e);const n=t.target.parentNode.parentNode.id;console.log(n);const o=c.getTask(n);E=n;const d=document.getElementById("edit-title"),a=document.getElementById("edit-description"),r=document.getElementById("edit-due-date"),l=document.getElementById("edit-priority"),i=document.getElementById("edit-status");d.value=o.getTitle(),a.value=o.getDescription(),r.value=o.getDate(),l.value=o.getPriority(),"Complete"==o.getStatus()?i.checked=!0:i.checked=!1}else if(t.target.matches("span")&&"delete"==t.target.textContent){const e=t.target.parentNode.parentNode;c.removeTask(e.id),e.remove()}else if(t.target.matches("button")&&"Details"==t.target.textContent){const e=t.target.parentNode.parentNode.id,n=c.getTask(e);E=e;const o=document.getElementById("task-title-output"),d=document.getElementById("task-due-date-output"),a=document.getElementById("task-priority-output"),r=document.getElementById("task-status-output"),l=document.getElementById("task-details-output");o.textContent=n.getTitle(),d.textContent=n.getDate(),a.textContent=n.getPriority(),r.textContent=n.getStatus(),l.textContent=n.getDescription();const i=document.getElementById("task-details");(0,s.B)(i),document.querySelectorAll("[data-close-button]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.closest("#task-details");(0,s.z)(e)}))}))}}));const I=document.querySelector(".add-task"),L=document.querySelector(".edit-task");I.addEventListener("click",(t=>{t.preventDefault();const e=function(t){const e=document.getElementById("title").value,n=document.getElementById("description").value,s=document.getElementById("due-date").value,d=document.getElementById("priority").value;let c;c=document.getElementById("status").checked?"Complete":"Incomplete";const a=self.crypto.randomUUID();return(0,o.iQ)(e,n,s,d,c,a)}();!function(t){const e=document.querySelector(".tasks"),n=document.createElement("div");n.classList.add("task"),n.id=t.getId();const o=document.createElement("div");o.classList.add("first-task-elements"),"Low"==t.getPriority()?n.style.borderLeft="5px solid green":"Medium"==t.getPriority()?n.style.borderLeft="5px solid orange":n.style.borderLeft="5px solid red","Complete"==t.getStatus()?n.style.opacity="0.5":"Incomplete"==t.getStatus()&&(n.style.opactiy="1");const s=document.createElement("div");s.classList.add("title"),s.textContent=t.getTitle();const d=document.createElement("div");d.classList.add("last-task-elements");const c=document.createElement("button");c.textContent="Details",c.classList.add("details");const a=document.createElement("div");a.classList.add("due-date"),a.textContent=t.getDate();const r=document.createElement("span");r.classList.add("edit","material-icons-outlined"),r.textContent="edit";const l=document.createElement("span");l.classList.add("delete","material-icons-outlined"),l.textContent="delete",o.append(s),d.append(c,a,r,l),n.append(o,d),e.append(n)}(e),c.addTask(e),document.querySelector(".form-card").reset();const n=document.getElementById("due-date"),s=(new Date).toISOString().slice(0,10);n.value=s})),L.addEventListener("click",(t=>{t.preventDefault(),function(t){const e=c.getTask(E),n=document.getElementById("edit-title").value,o=document.getElementById("edit-description").value,s=document.getElementById("edit-due-date").value,d=document.getElementById("edit-priority").value,a=document.getElementById("edit-status").checked;e.setTitle(n),e.setDescription(o),e.setDate(s),e.setPriority(d),a?e.setStatus("Complete"):e.setStatus("Incomplete")}(),function(t){const e=document.getElementById(t),n=c.getTask(t);e.childNodes[0].textContent=n.getTitle(),"Low"==n.getPriority()?e.style.borderLeft="5px solid green":"Medium"==n.getPriority()?e.style.borderLeft="5px solid orange":e.style.borderLeft="5px solid red","Complete"==n.getStatus()?e.style.opacity="0.5":"Incomplete"==n.getStatus()&&(e.style.opacity="1"),e.childNodes[1].childNodes[1].textContent=n.getDate()}(E)}))}},e={};function n(o){var s=e[o];if(void 0!==s)return s.exports;var d=e[o]={exports:{}};return t[o](d,d.exports,n),d.exports}n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n(138),n(803),n(982)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,