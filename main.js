(()=>{"use strict";var e={138:(e,t,d)=>{d.d(t,{IK:()=>n,iQ:()=>o,m8:()=>s});const o=(e,t,d,o,n,s)=>({getTitle:()=>e,setTitle:t=>e=t,getDescription:()=>t,setDescription:e=>t=e,getDate:()=>d,setDate:e=>d=e,getPriority:()=>o,setPriority:e=>o=e,getStatus:()=>n,setStatus:e=>n=e,getId:()=>s,setId:e=>s=e}),n=(e,t)=>{let d=[];return{getTasks:()=>d,getProjectTitle:()=>e,getProjectId:()=>t,setProjectTitle:t=>e=t,setProjectId:e=>t=e,getTask:e=>d.find((t=>t.getId()===e)),addTask:e=>{d.push(e)},removeTask:e=>{d=d.filter((t=>t.getId()!==e))}}},s=()=>{let e=[];return{getProject:t=>e.find((e=>e.getProjectId()===t)),getProjects:()=>e,addProject:t=>{e.push(t)},removeProject:t=>{e=e.filter((e=>e.getProjectId()!==t))}}}},803:(e,t,d)=>{var o=d(138);(0,o.m8)();const n=(0,o.IK)("Default Project"),s=document.getElementById("due-date"),a=(new Date).toISOString().slice(0,10);let c;s.value=a,document.querySelector(".tasks").addEventListener("click",(e=>{if(e.target.matches("span")&&"edit"==e.target.textContent){g(document.querySelector("#edit-form"));const t=e.target.parentNode.parentNode.id,d=n.getTask(t);c=t;const o=document.getElementById("edit-title"),s=document.getElementById("edit-description"),a=document.getElementById("edit-due-date"),r=document.getElementById("edit-priority"),l=document.getElementById("edit-status");o.value=d.getTitle(),s.value=d.getDescription(),a.value=d.getDate(),r.value=d.getPriority(),"Complete"==d.getStatus()?l.checked=!0:l.checked=!1}else if(e.target.matches("span")&&"delete"==e.target.textContent){const t=e.target.parentNode.parentNode;n.removeTask(t.id),t.remove()}else e.target.matches("button")}));const r=document.querySelector(".add-task"),l=document.querySelector(".edit-task");r.addEventListener("click",(e=>{e.preventDefault();const t=function(){const e=document.getElementById("title").value,t=document.getElementById("description").value,d=document.getElementById("due-date").value,n=document.getElementById("priority").value;let s;s=document.getElementById("status").checked?"Complete":"Incomplete";const a=self.crypto.randomUUID();return(0,o.iQ)(e,t,d,n,s,a)}();!function(e){const t=document.querySelector(".tasks"),d=document.createElement("div");d.classList.add("task"),d.id=e.getId();const o=document.createElement("div");o.classList.add("first-task-elements"),"Low"==e.getPriority()?d.style.borderLeft="5px solid green":"Medium"==e.getPriority()?d.style.borderLeft="5px solid orange":d.style.borderLeft="5px solid red","Complete"==e.getStatus()?d.style.opacity="0.5":"Incomplete"==e.getStatus()&&(d.style.opactiy="1");const n=document.createElement("div");n.classList.add("title"),n.textContent=e.getTitle();const s=document.createElement("div");s.classList.add("last-task-elements");const a=document.createElement("div");a.classList.add("due-date"),a.textContent=e.getDate();const c=document.createElement("span");c.classList.add("edit","material-icons-outlined"),c.textContent="edit";const r=document.createElement("span");r.classList.add("delete","material-icons-outlined"),r.textContent="delete",o.append(n),s.append(a,c,r),d.append(o,s),t.append(d)}(t),n.addTask(t),document.querySelector(".form-card").reset();const d=document.getElementById("due-date"),s=(new Date).toISOString().slice(0,10);d.value=s})),l.addEventListener("click",(e=>{e.preventDefault(),function(){const e=n.getTask(c),t=document.getElementById("edit-title").value,d=document.getElementById("edit-description").value,o=document.getElementById("edit-due-date").value,s=document.getElementById("edit-priority").value,a=document.getElementById("edit-status").checked;e.setTitle(t),e.setDescription(d),e.setDate(o),e.setPriority(s),a?e.setStatus("Complete"):e.setStatus("Incomplete")}(),function(e){const t=document.getElementById(e),d=n.getTask(e);t.childNodes[0].textContent=d.getTitle(),"Low"==d.getPriority()?t.style.borderLeft="5px solid green":"Medium"==d.getPriority()?t.style.borderLeft="5px solid orange":t.style.borderLeft="5px solid red","Complete"==d.getStatus()?t.style.opacity="0.5":"Incomplete"==d.getStatus()&&(t.style.opacity="1"),t.childNodes[1].childNodes[0].textContent=d.getDate()}(c)}));const i=document.querySelectorAll("[data-modal-target]"),u=document.querySelectorAll("[data-close-button]"),m=document.getElementById("overlay");function g(e){null!=e&&(e.classList.add("active"),m.classList.add("active"))}i.forEach((e=>{e.addEventListener("click",(()=>{g(document.querySelector(e.dataset.modalTarget))}))})),u.forEach((e=>{e.addEventListener("click",(()=>{var t;null!=(t=e.closest(".form"))&&(t.classList.remove("active"),m.classList.remove("active"))}))}))}},t={};function d(o){var n=t[o];if(void 0!==n)return n.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,d),s.exports}d.d=(e,t)=>{for(var o in t)d.o(t,o)&&!d.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},d.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),d(138),d(803)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,