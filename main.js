(()=>{"use strict";var t={138:(t,e,o)=>{o.d(e,{IK:()=>d,iQ:()=>n,m8:()=>s});const n=(t,e,o,n,d,s)=>({getTitle:()=>t,setTitle:e=>t=e,getDescription:()=>e,setDescription:t=>e=t,getDate:()=>o,setDate:t=>o=t,getPriority:()=>n,setPriority:t=>n=t,getStatus:()=>d,setStatus:t=>d=t,getId:()=>s,setId:t=>s=t}),d=(t,e)=>{let o=[];return{getTasks:()=>o,getProjectTitle:()=>t,getProjectId:()=>e,setProjectTitle:e=>t=e,setProjectId:t=>e=t,getTask:t=>o.find((e=>e.getId()===t)),addTask:t=>{o.push(t)},removeTask:t=>{o=o.filter((e=>e.getId()!==t))}}},s=()=>{let t=[];return{getProject:e=>t.find((t=>t.getProjectId()===e)),getProjects:()=>t,addProject:e=>{t.push(e)},removeProject:e=>{t=t.filter((t=>t.getProjectId()!==e))}}}},982:(t,e,o)=>{o.d(e,{B:()=>a,z:()=>c});const n=document.querySelectorAll("[data-modal-target]"),d=document.querySelectorAll("[data-close-button]"),s=document.getElementById("overlay");function a(t){null!=t&&(t.classList.add("active"),s.classList.add("active"))}function c(t){null!=t&&(t.classList.remove("active"),s.classList.remove("active"))}n.forEach((t=>{t.addEventListener("click",(()=>{a(document.querySelector(t.dataset.modalTarget))}))})),d.forEach((t=>{t.addEventListener("click",(()=>{c(t.closest(".form"))}))}))},803:(t,e,o)=>{var n=o(138),d=o(982);(0,n.m8)();const s=(0,n.IK)("Default Project"),a=document.getElementById("due-date"),c=(new Date).toISOString().slice(0,10);let l;a.value=c,document.querySelector(".tasks").addEventListener("click",(t=>{if(t.target.matches("span")&&"edit"==t.target.textContent){const e=document.querySelector("#edit-form");(0,d.B)(e);const o=t.target.parentNode.parentNode.id;console.log(o);const n=s.getTask(o);l=o;const a=document.getElementById("edit-title"),c=document.getElementById("edit-description"),r=document.getElementById("edit-due-date"),i=document.getElementById("edit-priority"),u=document.getElementById("edit-status");a.value=n.getTitle(),c.value=n.getDescription(),r.value=n.getDate(),i.value=n.getPriority(),"Complete"==n.getStatus()?u.checked=!0:u.checked=!1}else if(t.target.matches("span")&&"delete"==t.target.textContent){const e=t.target.parentNode.parentNode;s.removeTask(e.id),e.remove()}else if(t.target.matches("button")&&"Details"==t.target.textContent){const e=t.target.parentNode.parentNode.id,o=s.getTask(e);l=e;const n=document.getElementById("task-title-output"),a=document.getElementById("task-due-date-output"),c=document.getElementById("task-priority-output"),r=document.getElementById("task-status-output"),i=document.getElementById("task-details-output");n.textContent=o.getTitle(),a.textContent=o.getDate(),c.textContent=o.getPriority(),r.textContent=o.getStatus(),i.textContent=o.getDescription();const u=document.getElementById("task-details");(0,d.B)(u),document.querySelectorAll("[data-close-button]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.closest("#task-details");(0,d.z)(e)}))}))}}));const r=document.querySelector(".add-task"),i=document.querySelector(".edit-task");r.addEventListener("click",(t=>{t.preventDefault();const e=function(){const t=document.getElementById("title").value,e=document.getElementById("description").value,o=document.getElementById("due-date").value,d=document.getElementById("priority").value;let s;s=document.getElementById("status").checked?"Complete":"Incomplete";const a=self.crypto.randomUUID();return(0,n.iQ)(t,e,o,d,s,a)}();!function(t){const e=document.querySelector(".tasks"),o=document.createElement("div");o.classList.add("task"),o.id=t.getId();const n=document.createElement("div");n.classList.add("first-task-elements"),"Low"==t.getPriority()?o.style.borderLeft="5px solid green":"Medium"==t.getPriority()?o.style.borderLeft="5px solid orange":o.style.borderLeft="5px solid red","Complete"==t.getStatus()?o.style.opacity="0.5":"Incomplete"==t.getStatus()&&(o.style.opactiy="1");const d=document.createElement("div");d.classList.add("title"),d.textContent=t.getTitle();const s=document.createElement("div");s.classList.add("last-task-elements");const a=document.createElement("button");a.textContent="Details",a.classList.add("details");const c=document.createElement("div");c.classList.add("due-date"),c.textContent=t.getDate();const l=document.createElement("span");l.classList.add("edit","material-icons-outlined"),l.textContent="edit";const r=document.createElement("span");r.classList.add("delete","material-icons-outlined"),r.textContent="delete",n.append(d),s.append(a,c,l,r),o.append(n,s),e.append(o)}(e),s.addTask(e),document.querySelector(".form-card").reset();const o=document.getElementById("due-date"),d=(new Date).toISOString().slice(0,10);o.value=d})),i.addEventListener("click",(t=>{t.preventDefault(),function(){const t=s.getTask(l),e=document.getElementById("edit-title").value,o=document.getElementById("edit-description").value,n=document.getElementById("edit-due-date").value,d=document.getElementById("edit-priority").value,a=document.getElementById("edit-status").checked;t.setTitle(e),t.setDescription(o),t.setDate(n),t.setPriority(d),a?t.setStatus("Complete"):t.setStatus("Incomplete")}(),function(t){const e=document.getElementById(t),o=s.getTask(t);e.childNodes[0].textContent=o.getTitle(),"Low"==o.getPriority()?e.style.borderLeft="5px solid green":"Medium"==o.getPriority()?e.style.borderLeft="5px solid orange":e.style.borderLeft="5px solid red","Complete"==o.getStatus()?e.style.opacity="0.5":"Incomplete"==o.getStatus()&&(e.style.opacity="1"),e.childNodes[1].childNodes[1].textContent=o.getDate()}(l)}))}},e={};function o(n){var d=e[n];if(void 0!==d)return d.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,o),s.exports}o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o(138),o(803),o(982)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,