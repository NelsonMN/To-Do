(()=>{"use strict";var e={138:(e,t,d)=>{d.d(t,{IK:()=>a,TG:()=>o,iQ:()=>n});const n=(e="",t="",d="Low",n="No Due Date",a)=>({getTitle:()=>e,setTitle:t=>e=t,getDetails:()=>t,setDetails:e=>t=e,getPriority:()=>d,setPriority:e=>d=e,getDueDate:()=>n,setDueDate:e=>n=e,getStatus:()=>a,setStatus:e=>a=e}),a=e=>{let t=[];return{getTitle:()=>e,setTitle:t=>e=t,getTasks:()=>t,setTasks:e=>t=e,getTask:e=>t.find((t=>e===t.getTitle())),containsTask:e=>t.some((t=>e===t.getTitle())),addTask:e=>t.push(e),removeTask:e=>{t=t.filter((t=>e!==t.getTitle()))}}},o=()=>{let e=[];return{getProjects:()=>e,getProject:t=>e.find((e=>t===e.getTitle())),containsProject:t=>e.some((e=>t===e.getTitle())),addProject:t=>e.push(t),removeProject:t=>{e=e.filter((e=>t!==e.getTitle()))}}}},803:(e,t,d)=>{var n=d(138);const a=(0,n.TG)(),o=(0,n.IK)("Home"),l=(0,n.IK)("Today"),i=(0,n.IK)("This Week");a.addProject(o),a.addProject(l),a.addProject(i),document.getElementById("due-date").value=r();const s={};function r(){let e=new Date,t=String(e.getDate()).padStart(2,"0"),d=String(e.getMonth()+1).padStart(2,"0");return e.getFullYear()+"-"+d+"-"+t}function c(e){const t=e.target.parentNode.parentNode.parentNode.children[0].children[1].textContent;o.removeTask(t),e.target.parentNode.parentNode.parentNode.remove()}function u(e){const t=e.target.parentNode.parentNode.parentNode.children[0].children[1].textContent,d=o.getTask(t),n=d.getDueDate(),a=d.getPriority(),l=d.getDetails(),i=d.getStatus(),s=document.getElementById("edit-title"),r=document.getElementById("edit-due-date"),c=document.getElementById("edit-priority"),u=document.getElementById("edit-details"),m=document.getElementById("edit-status");s.value=t,r.value=n,c.value=a,u.value=l,m.checked="Not Complete"!=i}document.getElementById("submit-task").addEventListener("click",(e=>{if(e.stopImmediatePropagation(),e.target.closest("form").checkValidity()){e.preventDefault(),function(e){const t=document.querySelector(".tasks"),d=document.createElement("div"),n=document.createElement("div"),a=document.createElement("div"),l=document.createElement("div"),i=document.createElement("div"),r=document.createElement("button"),m=document.createElement("div"),g=document.createElement("div"),y=document.createElement("span"),p=document.createElement("div"),v=document.createElement("span");d.classList.add("task"),n.classList.add("first-task-elements"),a.classList.add("task-checkbox"),l.classList.add("task-title"),i.classList.add("last-task-elements"),m.classList.add("task-due-date"),g.classList.add("task-edit"),y.classList.add("material-icons-outlined","edit-symbol"),y.dataset.modalTarget="#edit-modal",p.classList.add("task-delete"),v.classList.add("material-icons-outlined","delete-symbol"),"Complete"==e.getStatus()?a.style.background="green":a.style.background="white","low"==e.getPriority()?d.style.borderLeft="5px solid green":"medium"==e.getPriority()?d.style.borderLeft="5px solid orange":"high"==e.getPriority()&&(d.style.borderLeft="5px solid red"),l.textContent=e.getTitle(),m.textContent=e.getDueDate(),r.textContent="Details",y.textContent="edit",v.textContent="delete",v.addEventListener("click",c),y.addEventListener("click",E),y.addEventListener("click",u),o.addTask(e),d.append(n,i),n.append(a,l),i.append(r,m,g,p),g.append(y),p.append(v),t.append(d),s[e]=d}(function(){const e=document.getElementById("title").value,t=document.getElementById("due-date").value,d=document.getElementById("priority").value,a=document.getElementById("details").value;let o;return o=document.getElementById("status").checked?"Complete":"Not Complete",(0,n.iQ)(e,a,d,t,o)}());const t=document.getElementById("new-task"),d=document.getElementById("due-date");t.reset(),d.value=r()}})),document.getElementById("edit-task-submit").addEventListener("click",(e=>{if(e.target.closest("form").checkValidity()){e.preventDefault(),e.stopPropagation();const t=function(){const e=document.getElementById("edit-title").value,t=document.getElementById("edit-due-date").value,d=document.getElementById("edit-priority").value,a=document.getElementById("edit-details").value;let o;return o=document.getElementById("status").checked?"Complete":"Not Complete",(0,n.iQ)(e,a,d,t,o)}();!function(e){const t=document.getElementById("edit-title").value,d=document.getElementById("edit-due-date").value,n=document.getElementById("edit-priority").value,a=document.getElementById("edit-details").value,o=document.getElementById("edit-status").checked;e.setTitle(t),e.setDueDate(d),e.setPriority(n),e.setDetails(a),o?e.setStatus("Complete"):e.setStatus("Not Complete")}(t),function(e){const t=s[e];t.children[0].children[1].textContent=e.getTitle(),t.children[1].children[1].textContent=e.getDueDate(),"low"==e.getPriority()?t.style.borderLeft="5px solid green":"medium"==e.getPriority()?t.style.borderLeft="5px solid orange":"high"==e.getPriority()&&(t.style.borderLeft="5px solid red");const d=t.children[0].children[0];"Complete"==e.getStatus()?d.style.background="green":"Not Complete"==e.getStatus()&&(d.style.background="white")}(t),document.getElementById("new-task").reset()}}));const m=document.querySelectorAll("[data-modal-target]"),g=document.querySelectorAll("[data-close-button]"),y=document.getElementById("overlay");function p(e){k(document.querySelector(e.target.dataset.modalTarget))}function v(e){var t;null!=(t=e.target.closest(".modal"))&&(t.classList.remove("active"),y.classList.remove("active"))}function E(e){k(document.querySelector(e.target.dataset.modalTarget))}function k(e){null!=e&&(e.classList.add("active"),y.classList.add("active"))}m.forEach((e=>{e.addEventListener("click",p)})),g.forEach((e=>{e.addEventListener("click",v)}))}},t={};function d(n){var a=t[n];if(void 0!==a)return a.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,d),o.exports}d.d=(e,t)=>{for(var n in t)d.o(t,n)&&!d.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},d.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),d(138),d(803)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,