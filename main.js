(()=>{"use strict";var e={138:(e,t,a)=>{a.d(t,{IK:()=>n,TG:()=>o,iQ:()=>d});const d=(e="",t="",a="Low",d="No Due Date",n)=>({getTitle:()=>e,setTitle:t=>e=t,getDetails:()=>t,setDetails:e=>t=e,getPriority:()=>a,setPriority:e=>a=e,getDueDate:()=>d,setDueDate:e=>d=e,getStatus:()=>n,setStatus:e=>n=e}),n=e=>{let t=[];return{getTitle:()=>e,setTitle:t=>e=t,getTasks:()=>t,setTasks:e=>t=e,getTask:e=>t.find((t=>e===t.getTitle())),containsTask:e=>t.some((t=>e===t.getTitle())),addTask:e=>t.push(e),removeTask:e=>{t=t.filter((t=>e!==t.getTitle()))}}},o=()=>{let e=[];return{getProjects:()=>e,getProject:t=>e.find((e=>t===e.getTitle())),containsProject:t=>e.some((e=>t===e.getTitle())),addProject:t=>e.push(t),removeProject:t=>{e=e.filter((e=>t!==e.getTitle()))}}}},803:(e,t,a)=>{var d=a(138);const n=(0,d.TG)(),o=(0,d.IK)("Home"),s=(0,d.IK)("Today"),r=(0,d.IK)("This Week");n.addProject(o),n.addProject(s),n.addProject(r),document.getElementById("due-date").value=function(){let e=new Date,t=e.getDate(),a=e.getMonth()+1;return e.getFullYear()+"-"+(a<10?"0"+a:a)+"-"+(t<10?"0"+t:t)}();const l=document.querySelector("#submit-task");function c(e){const t=e.target.parentNode.parentNode.parentNode.children[0].children[1].textContent;o.removeTask(t),e.target.parentNode.parentNode.parentNode.remove()}l.addEventListener("click",(e=>{e.preventDefault(),"Add Task"==l.textContent?function(e){const t=document.querySelector(".tasks"),a=document.createElement("div"),d=document.createElement("div"),n=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div"),l=document.createElement("button"),i=document.createElement("div"),u=document.createElement("div"),m=document.createElement("span"),g=document.createElement("div"),v=document.createElement("span");a.classList.add("task"),d.classList.add("first-task-elements"),n.classList.add("task-checkbox"),s.classList.add("task-title"),r.classList.add("last-task-elements"),i.classList.add("task-due-date"),u.classList.add("task-edit"),m.classList.add("material-icons-outlined","edit-symbol"),m.dataset.modalTarget="#edit-modal",g.classList.add("task-delete"),v.classList.add("material-icons-outlined","delete-symbol"),"Complete"==e.getStatus()?n.style.background="green":n.style.background="white","low"==e.getPriority()?a.style.borderLeft="5px solid green":"medium"==e.getPriority()?a.style.borderLeft="5px solid orange":"high"==e.getPriority()&&(a.style.borderLeft="5px solid red"),s.textContent=e.getTitle(),i.textContent=e.getDueDate(),l.textContent="Details",m.textContent="edit",m.addEventListener("click",p),v.textContent="delete",v.addEventListener("click",c);const y=o.addTask(e);a.id=y,a.append(d,r),d.append(n,s),r.append(l,i,u,g),u.append(m),g.append(v),t.append(a)}(function(){const e=document.getElementById("title").value,t=document.getElementById("due-date").value,a=document.getElementById("priority").value,n=document.getElementById("details").value;let o;return o=document.getElementById("status").checked?"Complete":"Not Complete",(0,d.iQ)(e,n,a,t,o)}()):l.textContent}));const i=document.querySelectorAll("[data-modal-target]"),u=document.querySelectorAll("[data-close-button]"),m=document.getElementById("overlay");function g(e){y(document.querySelector(e.target.dataset.modalTarget))}function p(e){y(document.querySelector(e.target.dataset.modalTarget)),console.log(e.target)}function v(e){var t;null!=(t=e.target.closest(".modal"))&&(t.classList.remove("active"),m.classList.remove("active"))}function y(e){null!=e&&(e.classList.add("active"),m.classList.add("active"))}i.forEach((e=>{e.addEventListener("click",g)})),u.forEach((e=>{e.addEventListener("click",v)}))}},t={};function a(d){var n=t[d];if(void 0!==n)return n.exports;var o=t[d]={exports:{}};return e[d](o,o.exports,a),o.exports}a.d=(e,t)=>{for(var d in t)a.o(t,d)&&!a.o(e,d)&&Object.defineProperty(e,d,{enumerable:!0,get:t[d]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a(138),a(803)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,