(()=>{"use strict";var t={138:(t,e,o)=>{o.d(e,{IK:()=>n,iQ:()=>d,m8:()=>s});const d=(t,e,o,d,n,s)=>({getTitle:()=>t,setTitle:e=>t=e,getDescription:()=>e,setDescription:t=>e=t,getDate:()=>o,setDate:t=>o=t,getPriority:()=>d,setPriority:t=>d=t,getStatus:()=>n,setStatus:t=>n=t,getId:()=>s,setId:t=>s=t}),n=(t,e)=>{let o=[];return{getTasks:()=>o,getProjectTitle:()=>t,getProjectId:()=>e,setProjectTitle:e=>t=e,setProjectId:t=>e=t,getTask:t=>o.find((e=>e.getId()===t)),addTask:t=>{o.push(t)},removeTask:t=>{o=o.filter((e=>e.getId()!==t))}}},s=()=>{let t=[];return{getProject:e=>t.find((t=>t.getProjectId()===e)),getProjects:()=>t,addProject:e=>{t.push(e)},removeProject:e=>{t=t.filter((t=>t.getProjectId()!==e))}}}},803:(t,e,o)=>{var d=o(138);(0,d.m8)();const n=(0,d.IK)("Default Project"),s=document.getElementById("due-date"),a=(new Date).toISOString().slice(0,10);let c;s.value=a,document.querySelector(".tasks").addEventListener("click",(t=>{if(t.target.matches("span")&&"edit"==t.target.textContent){g(document.querySelector("#edit-form"));const e=t.target.parentNode.parentNode.id;console.log(e);const o=n.getTask(e);c=e;const d=document.getElementById("edit-title"),s=document.getElementById("edit-description"),a=document.getElementById("edit-due-date"),l=document.getElementById("edit-priority"),r=document.getElementById("edit-status");d.value=o.getTitle(),s.value=o.getDescription(),a.value=o.getDate(),l.value=o.getPriority(),"Complete"==o.getStatus()?r.checked=!0:r.checked=!1}else if(t.target.matches("span")&&"delete"==t.target.textContent){const e=t.target.parentNode.parentNode;n.removeTask(e.id),e.remove()}else if(t.target.matches("button")&&"Details"==t.target.textContent){const e=t.target.parentNode.parentNode.id,o=n.getTask(e);c=e;const d=document.getElementById("task-title-output"),s=document.getElementById("task-due-date-output"),a=document.getElementById("task-priority-output"),l=document.getElementById("task-status-output"),r=document.getElementById("task-details-output");d.textContent=o.getTitle(),s.textContent=o.getDate(),a.textContent=o.getPriority(),l.textContent=o.getStatus(),r.textContent=o.getDescription(),g(document.getElementById("task-details")),document.querySelectorAll("[data-close-button]").forEach((t=>{t.addEventListener("click",(()=>{p(t.closest("#task-details"))}))}))}}));const l=document.querySelector(".add-task"),r=document.querySelector(".edit-task");l.addEventListener("click",(t=>{t.preventDefault();const e=function(){const t=document.getElementById("title").value,e=document.getElementById("description").value,o=document.getElementById("due-date").value,n=document.getElementById("priority").value;let s;s=document.getElementById("status").checked?"Complete":"Incomplete";const a=self.crypto.randomUUID();return(0,d.iQ)(t,e,o,n,s,a)}();!function(t){const e=document.querySelector(".tasks"),o=document.createElement("div");o.classList.add("task"),o.id=t.getId();const d=document.createElement("div");d.classList.add("first-task-elements"),"Low"==t.getPriority()?o.style.borderLeft="5px solid green":"Medium"==t.getPriority()?o.style.borderLeft="5px solid orange":o.style.borderLeft="5px solid red","Complete"==t.getStatus()?o.style.opacity="0.5":"Incomplete"==t.getStatus()&&(o.style.opactiy="1");const n=document.createElement("div");n.classList.add("title"),n.textContent=t.getTitle();const s=document.createElement("div");s.classList.add("last-task-elements");const a=document.createElement("button");a.textContent="Details",a.classList.add("details");const c=document.createElement("div");c.classList.add("due-date"),c.textContent=t.getDate();const l=document.createElement("span");l.classList.add("edit","material-icons-outlined"),l.textContent="edit";const r=document.createElement("span");r.classList.add("delete","material-icons-outlined"),r.textContent="delete",d.append(n),s.append(a,c,l,r),o.append(d,s),e.append(o)}(e),n.addTask(e),document.querySelector(".form-card").reset();const o=document.getElementById("due-date"),s=(new Date).toISOString().slice(0,10);o.value=s})),r.addEventListener("click",(t=>{t.preventDefault(),function(){const t=n.getTask(c),e=document.getElementById("edit-title").value,o=document.getElementById("edit-description").value,d=document.getElementById("edit-due-date").value,s=document.getElementById("edit-priority").value,a=document.getElementById("edit-status").checked;t.setTitle(e),t.setDescription(o),t.setDate(d),t.setPriority(s),a?t.setStatus("Complete"):t.setStatus("Incomplete")}(),function(t){const e=document.getElementById(t),o=n.getTask(t);e.childNodes[0].textContent=o.getTitle(),"Low"==o.getPriority()?e.style.borderLeft="5px solid green":"Medium"==o.getPriority()?e.style.borderLeft="5px solid orange":e.style.borderLeft="5px solid red","Complete"==o.getStatus()?e.style.opacity="0.5":"Incomplete"==o.getStatus()&&(e.style.opacity="1"),e.childNodes[1].childNodes[1].textContent=o.getDate()}(c)}));const i=document.querySelectorAll("[data-modal-target]"),u=document.querySelectorAll("[data-close-button]"),m=document.getElementById("overlay");function g(t){null!=t&&(t.classList.add("active"),m.classList.add("active"))}function p(t){null!=t&&(t.classList.remove("active"),m.classList.remove("active"))}i.forEach((t=>{t.addEventListener("click",(()=>{g(document.querySelector(t.dataset.modalTarget))}))})),u.forEach((t=>{t.addEventListener("click",(()=>{p(t.closest(".form"))}))}))}},e={};function o(d){var n=e[d];if(void 0!==n)return n.exports;var s=e[d]={exports:{}};return t[d](s,s.exports,o),s.exports}o.d=(t,e)=>{for(var d in e)o.o(e,d)&&!o.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:e[d]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o(138),o(803)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,