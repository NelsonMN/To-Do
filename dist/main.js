(()=>{"use strict";var t={138:(t,e,o)=>{o.d(e,{IK:()=>n,iQ:()=>d,m8:()=>s});const d=(t,e,o,d,n,s)=>({getTitle:()=>t,setTitle:e=>t=e,getDescription:()=>e,setDescription:t=>e=t,getDate:()=>o,setDate:t=>o=t,getPriority:()=>d,setPriority:t=>d=t,getStatus:()=>n,setStatus:t=>n=t,getId:()=>s,setId:t=>s=t}),n=(t,e)=>{let o=[];return{getTasks:()=>o,getProjectTitle:()=>t,getProjectId:()=>e,setProjectTitle:e=>t=e,setProjectId:t=>e=t,getTask:t=>o.find((e=>e.getId()===t)),addTask:t=>{o.push(t)},removeTask:t=>{o=o.filter((e=>e.getId()!==t))}}},s=()=>{let t=[];return{getProject:e=>t.find((t=>t.getProjectId()===e)),getProjects:()=>t,addProject:e=>{t.push(e)},removeProject:e=>{t=t.filter((t=>t.getProjectId()!==e))}}}},23:(t,e,o)=>{var d=o(138);const n=document.querySelectorAll("[data-modal-target]"),s=document.querySelectorAll("[data-close-button]"),a=document.getElementById("overlay");function c(t){null!=t&&(t.classList.add("active"),a.classList.add("active"))}function l(t){null!=t&&(t.classList.remove("active"),a.classList.remove("active"))}n.forEach((t=>{t.addEventListener("click",(()=>{c(document.querySelector(t.dataset.modalTarget))}))})),s.forEach((t=>{t.addEventListener("click",(()=>{l(t.closest(".form"))}))})),(0,d.m8)();const r=(0,d.IK)("Default Project"),i=document.getElementById("due-date"),u=(new Date).toISOString().slice(0,10);let m;i.value=u,document.querySelector(".tasks").addEventListener("click",(t=>{if(t.target.matches("span")&&"edit"==t.target.textContent){c(document.querySelector("#edit-form"));const e=t.target.parentNode.parentNode.id;console.log(e);const o=r.getTask(e);m=e;const d=document.getElementById("edit-title"),n=document.getElementById("edit-description"),s=document.getElementById("edit-due-date"),a=document.getElementById("edit-priority"),l=document.getElementById("edit-status");d.value=o.getTitle(),n.value=o.getDescription(),s.value=o.getDate(),a.value=o.getPriority(),"Complete"==o.getStatus()?l.checked=!0:l.checked=!1}else if(t.target.matches("span")&&"delete"==t.target.textContent){const e=t.target.parentNode.parentNode;r.removeTask(e.id),e.remove()}else if(t.target.matches("button")&&"Details"==t.target.textContent){const e=t.target.parentNode.parentNode.id,o=r.getTask(e);m=e;const d=document.getElementById("task-title-output"),n=document.getElementById("task-due-date-output"),s=document.getElementById("task-priority-output"),a=document.getElementById("task-status-output"),i=document.getElementById("task-details-output");d.textContent=o.getTitle(),n.textContent=o.getDate(),s.textContent=o.getPriority(),a.textContent=o.getStatus(),i.textContent=o.getDescription(),c(document.getElementById("task-details")),document.querySelectorAll("[data-close-button]").forEach((t=>{t.addEventListener("click",(()=>{l(t.closest("#task-details"))}))}))}}));const g=document.querySelector(".add-task"),p=document.querySelector(".edit-task");g.addEventListener("click",(t=>{t.preventDefault();const e=function(){const t=document.getElementById("title").value,e=document.getElementById("description").value,o=document.getElementById("due-date").value,n=document.getElementById("priority").value;let s;s=document.getElementById("status").checked?"Complete":"Incomplete";const a=self.crypto.randomUUID();return(0,d.iQ)(t,e,o,n,s,a)}();!function(t){const e=document.querySelector(".tasks"),o=document.createElement("div");o.classList.add("task"),o.id=t.getId();const d=document.createElement("div");d.classList.add("first-task-elements"),"Low"==t.getPriority()?o.style.borderLeft="5px solid green":"Medium"==t.getPriority()?o.style.borderLeft="5px solid orange":o.style.borderLeft="5px solid red","Complete"==t.getStatus()?o.style.opacity="0.5":"Incomplete"==t.getStatus()&&(o.style.opactiy="1");const n=document.createElement("div");n.classList.add("title"),n.textContent=t.getTitle();const s=document.createElement("div");s.classList.add("last-task-elements");const a=document.createElement("button");a.textContent="Details",a.classList.add("details");const c=document.createElement("div");c.classList.add("due-date"),c.textContent=t.getDate();const l=document.createElement("span");l.classList.add("edit","material-icons-outlined"),l.textContent="edit";const r=document.createElement("span");r.classList.add("delete","material-icons-outlined"),r.textContent="delete",d.append(n),s.append(a,c,l,r),o.append(d,s),e.append(o)}(e),r.addTask(e),document.querySelector(".form-card").reset();const o=document.getElementById("due-date"),n=(new Date).toISOString().slice(0,10);o.value=n})),p.addEventListener("click",(t=>{t.preventDefault(),function(){const t=r.getTask(m),e=document.getElementById("edit-title").value,o=document.getElementById("edit-description").value,d=document.getElementById("edit-due-date").value,n=document.getElementById("edit-priority").value,s=document.getElementById("edit-status").checked;t.setTitle(e),t.setDescription(o),t.setDate(d),t.setPriority(n),s?t.setStatus("Complete"):t.setStatus("Incomplete")}(),function(t){const e=document.getElementById(t),o=r.getTask(t);e.childNodes[0].textContent=o.getTitle(),"Low"==o.getPriority()?e.style.borderLeft="5px solid green":"Medium"==o.getPriority()?e.style.borderLeft="5px solid orange":e.style.borderLeft="5px solid red","Complete"==o.getStatus()?e.style.opacity="0.5":"Incomplete"==o.getStatus()&&(e.style.opacity="1"),e.childNodes[1].childNodes[1].textContent=o.getDate()}(m)}))}},e={};function o(d){var n=e[d];if(void 0!==n)return n.exports;var s=e[d]={exports:{}};return t[d](s,s.exports,o),s.exports}o.d=(t,e)=>{for(var d in e)o.o(e,d)&&!o.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:e[d]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o(138),o(23)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,